name: Continuous Integration
on: [push, pull_request]

jobs:
    check:
        strategy:
            matrix:
                os: [macos-latest, windows-latest, ubuntu-latest]
        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - name: Check
              uses: actions-rs/cargo@v1
              with:
                  command: check
                  args: --locked --verbose

    clippy:
        strategy:
            matrix:
                os: [macos-latest, windows-latest, ubuntu-latest]
        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - name: Check the lints
              uses: actions-rs/cargo@v1
              with:
                  command: clippy
                  args: --verbose -- -D warnings

    test:
        strategy:
            matrix:
                os: [macos-latest, windows-latest, ubuntu-latest]
        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - name: Run the tests
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: --locked --verbose

    formatting:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - name: Check the formatting
              uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check --verbose

    build:
        needs: [clippy, formatting, check, test]
        strategy:
            matrix:
                os:
                    - { NAME: linux, OS: ubuntu-latest, ARCH: x86_64, PATH: target/optimized/bob, TARGET: "" }
                    - { NAME: linux, OS: ubuntu-24.04-arm, ARCH: arm, PATH: target/optimized/bob, TARGET: "" }
                    - { NAME: macos, OS: macos-13, ARCH: x86_64, PATH: target/optimized/bob, TARGET: "" }
                    - { NAME: windows, OS: windows-latest, ARCH: x86_64, PATH: build, TARGET: "" }
                    - { NAME: macos, OS: macos-latest, ARCH: arm, PATH: target/optimized/bob, TARGET: "" }
                tls:
                    - { NAME: Rustls, SUFFIX: "", ARGS: "" }
                    - { NAME: OpenSSL, SUFFIX: "-openssl", ARGS: "--no-default-features --features native-tls" }
        runs-on: ${{matrix.os.OS}}
        steps:
            - uses: actions/checkout@v4
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - name: Install OpenSSL libraries
              run: sudo apt update && sudo apt install libssl-dev
              if: matrix.os.OS == 'ubuntu-latest' && matrix.tls.NAME == 'OpenSSL'
            - uses: Swatinem/rust-cache@v1
            - name: Build Bob
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --locked --profile optimized ${{ matrix.tls.ARGS }}
            - name: Setup Bob build directory
              run: |
                  mkdir build
                  copy .\\bin\\vcruntime140.dll .\\build
                  copy .\\target\\optimized\\bob.exe .\\build
              if: matrix.os.OS == 'windows-latest'
            - name: Upload Bob binary
              uses: actions/upload-artifact@v4
              with:
                  name: "bob-${{ matrix.os.NAME }}-${{ matrix.os.ARCH }}${{ matrix.tls.SUFFIX }}"
                  path: ${{ matrix.os.PATH }}
                  if-no-files-found: error
                  retention-days: 7
